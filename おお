"use client"

import type React from "react"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardFooter, CardHeader } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Upload, ImageIcon, Users, Info } from "lucide-react"

export default function CreateExhibitionPage() {
  const [activeTab, setActiveTab] = useState("basic")

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    // 実際のアプリケーションではここでフォームデータを送信します
    alert("展示会が作成されました！")
  }

  const nextTab = () => {
    if (activeTab === "basic") setActiveTab("projects")
    else if (activeTab === "projects") setActiveTab("settings")
  }

  const prevTab = () => {
    if (activeTab === "settings") setActiveTab("projects")
    else if (activeTab === "projects") setActiveTab("basic")
  }

  return (
    <main className="container mx-auto py-12 px-4">
      <div className="max-w-3xl mx-auto">
        <h1 className="text-3xl font-bold mb-2">新しい展示会を作成</h1>
        <p className="text-muted-foreground mb-8">クラスの作品を展示するためのオンライン展示会を作成します。</p>

        <form onSubmit={handleSubmit}>
          <Card>
            <CardHeader>
              <Tabs value={activeTab} onValueChange={setActiveTab}>
                <TabsList className="grid w-full grid-cols-3">
                  <TabsTrigger value="basic" className="flex items-center gap-2">
                    <Info className="h-4 w-4" />
                    <span>基本情報</span>
                  </TabsTrigger>
                  <TabsTrigger value="projects" className="flex items-center gap-2">
                    <ImageIcon className="h-4 w-4" />
                    <span>作品</span>
                  </TabsTrigger>
                  <TabsTrigger value="settings" className="flex items-center gap-2">
                    <Users className="h-4 w-4" />
                    <span>公開設定</span>
                  </TabsTrigger>
                </TabsList>

                <TabsContent value="basic">
                  <div className="space-y-6">
                    <div className="space-y-2">
                      <Label htmlFor="title">展示会タイトル</Label>
                      <Input id="title" placeholder="例: デザイン基礎 2023年度" required />
                    </div>

                    <div className="space-y-2">
                      <Label htmlFor="description">展示会の説明</Label>
                      <Textarea
                        id="description"
                        placeholder="この展示会の目的や内容について説明してください"
                        className="min-h-[100px]"
                        required
                      />
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="space-y-2">
                        <Label htmlFor="department">学科・専攻</Label>
                        <Select>
                          <SelectTrigger id="department">
                            <SelectValue placeholder="学科を選択" />
                          </SelectTrigger>
                          <SelectContent>
                            <SelectItem value="design">デザイン学科</SelectItem>
                            <SelectItem value="art">美術学科</SelectItem>
                            <SelectItem value="media">メディア学科</SelectItem>
                            <SelectItem value="architecture">建築学科</SelectItem>
                          </SelectContent>
                        </Select>
                      </div>

                      <div className="space-y-2">
                        <Label htmlFor="instructor">担当教員</Label>
                        <Input id="instructor" placeholder="例: 山田太郎" />
                      </div>
                    </div>

                    <div className="space-y-2">
                      <Label htmlFor="cover">カバー画像</Label>
                      <div className="border-2 border-dashed rounded-lg p-6 text-center">
                        <Upload className="h-8 w-8 mx-auto mb-2 text-muted-foreground" />
                        <p className="text-sm text-muted-foreground mb-2">
                          画像をドラッグ＆ドロップするか、クリックしてアップロード
                        </p>
                        <Button variant="outline" size="sm" type="button">
                          ファイルを選択
                        </Button>
                      </div>
                    </div>
                  </div>
                </TabsContent>

                <TabsContent value="projects">
                  <div className="space-y-6">
                    <div className="space-y-2">
                      <div className="flex justify-between items-center">
                        <Label>作品</Label>
                        <Button variant="outline" size="sm" type="button">
                          + 作品を追加
                        </Button>
                      </div>
                      <p className="text-sm text-muted-foreground">
                        展示会に含める作品を追加してください。後からでも追加・編集できます。
                      </p>
                    </div>

                    <div className="border rounded-lg p-4">
                      <p className="text-center text-muted-foreground py-8">
                        まだ作品が追加されていません。
                        <br />
                        「作品を追加」ボタンをクリックして作品を追加してください。
                      </p>
                    </div>

                    <div className="bg-muted/50 rounded-lg p-4">
                      <h3 className="font-medium mb-2">一括アップロード</h3>
                      <p className="text-sm text-muted-foreground mb-4">
                        複数の作品を一度にアップロードすることもできます。
                      </p>
                      <Button variant="outline" type="button">
                        複数ファイルをアップロード
                      </Button>
                    </div>
                  </div>
                </TabsContent>

                <TabsContent value="settings">
                  <div className="space-y-6">
                    <div className="space-y-2">
                      <Label htmlFor="visibility">公開設定</Label>
                      <Select defaultValue="public">
                        <SelectTrigger id="visibility">
                          <SelectValue placeholder="公開設定を選択" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="public">公開（誰でも閲覧可能）</SelectItem>
                          <SelectItem value="link">限定公開（リンクを知っている人のみ）</SelectItem>
                          <SelectItem value="private">非公開（招待された人のみ）</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>

                    <div className="space-y-2">
                      <Label htmlFor="comments">コメント設定</Label>
                      <Select defaultValue="all">
                        <SelectTrigger id="comments">
                          <SelectValue placeholder="コメント設定を選択" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="all">誰でもコメント可能</SelectItem>
                          <SelectItem value="members">メンバーのみコメント可能</SelectItem>
                          <SelectItem value="none">コメント機能を無効化</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>

                    <div className="space-y-2">
                      <Label>メンバー招待</Label>
                      <div className="border rounded-lg p-4">
                        <p className="text-sm text-muted-foreground mb-4">
                          この展示会を編集できるメンバーを招待できます。
                        </p>
                        <div className="flex gap-2">
                          <Input placeholder="メールアドレスを入力" />
                          <Button variant="outline" type="button">
                            招待
                          </Button>
                        </div>
                      </div>
                    </div>
                  </div>
                </TabsContent>
              </Tabs>
            </CardHeader>

            <CardContent className="pt-6">
              {/* TabsContent components have been moved to be direct children of the Tabs component */}
            </CardContent>

            <CardFooter className="flex justify-between">
              {activeTab !== "basic" ? (
                <Button variant="outline" type="button" onClick={prevTab}>
                  戻る
                </Button>
              ) : (
                <div></div>
              )}

              {activeTab !== "settings" ? (
                <Button type="button" onClick={nextTab}>
                  次へ
                </Button>
              ) : (
                <Button type="submit">展示会を作成</Button>
              )}
            </CardFooter>
          </Card>
        </form>
      </div>
    </main>
  )
}
